<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="it.communikein.myunimib">

    <!-- Required to save profile picture locally. -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <!-- Required to manage the UNIMIB account as a local account. -->
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />
    <uses-permission android:name="android.permission.USE_CREDENTIALS" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
    <!-- MANAGE_ACCOUNTS permission required to remove the Account from the AccountManager -->
    <uses-permission android:name="android.permission.MANAGE_ACCOUNTS" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />

    <!-- Required to access the internet. -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />

    <!--
         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
         Google Maps Android API v2, but you must specify either coarse or fine
         location permissions for the 'MyLocation' functionality. 
    -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />

    <application
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.MyUnimib"
        android:allowBackup="false"
        android:networkSecurityConfig="@xml/network_security_config"
        tools:targetApi="n">
        <meta-data
            android:name="asset_statements"
            android:resource="@string/asset_statements" />
        <meta-data
            android:name="firebase_performance_logcat_enabled"
            android:value="true" />
        <!--
             The API key is linked to the encryption key used to sign the APK.
             You need a different API key for each encryption key, including the release key
             that is used to sign the APK for publishing.
             You can define the keys for the debug and release targets in src/debug/ and
             src/release/.
        -->
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/google_maps_key" />

        <activity
            android:name=".ui.LoginActivity"
            android:label="@string/app_name"
            android:launchMode="singleTop">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <intent-filter
                android:autoVerify="true"
                tools:targetApi="m">
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />

                <data
                    android:host="communikein.github.io"
                    android:pathPrefix="/myunimib/login/"
                    android:scheme="http" />
            </intent-filter>
        </activity>
        <activity
            android:name=".ui.MainActivity"
            android:label="@string/title_home"
            android:launchMode="singleTop" />
        <activity
            android:name=".ui.SettingsActivity"
            android:label="@string/title_settings"
            android:parentActivityName=".ui.MainActivity">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".ui.MainActivity" />
        </activity>
        <activity
            android:name=".ui.detail.availableexam.AvailableExamDetailActivity"
            android:parentActivityName=".ui.MainActivity">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".ui.MainActivity" />
        </activity>
        <activity
            android:name=".ui.detail.enrolledexam.EnrolledExamDetailActivity"
            android:parentActivityName=".ui.MainActivity">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".ui.MainActivity" />
        </activity>

        <provider
            android:name="android.support.v4.content.FileProvider"
            android:authorities="@string/file_provider_authority"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths" />
        </provider>

        <!-- This is required for immediate syncs -->
        <service
            android:name=".data.network.BookletSyncIntentService"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"/>
        <service
            android:name=".data.network.ExamAvailableSyncIntentService"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"/>
        <service
            android:name=".data.network.ExamEnrolledSyncIntentService"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"/>

        <!-- This is the Service declaration used in conjunction with FirebaseJobDispatcher -->
        <service
            android:name=".data.network.BookletSyncJobService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.firebase.jobdispatcher.ACTION_EXECUTE" />
            </intent-filter>
        </service>
        <service
            android:name=".data.network.ExamAvailableSyncJobService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.firebase.jobdispatcher.ACTION_EXECUTE" />
            </intent-filter>
        </service>
        <service
            android:name=".data.network.ExamEnrolledSyncJobService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.firebase.jobdispatcher.ACTION_EXECUTE" />
            </intent-filter>
        </service>

        <!-- This is the service responsible for the account manager -->
        <service
            android:name=".accountmanager.S3AuthenticatorService"
            android:exported="false">
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator" />
            </intent-filter>

            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator" />
        </service>
    </application>

</manifest>